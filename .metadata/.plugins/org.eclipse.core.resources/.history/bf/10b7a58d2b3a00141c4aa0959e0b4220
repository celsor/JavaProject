package archeologyp1.shared;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Utilities {
	
	public Coordinate[][] load(String path){
		File myFile = new File(path);
		Scanner scan;
		int row, col;
		try {
			scan = new Scanner(myFile);
			String line = scan.nextLine();
			String size[] = line.split(",");
			String array[];
			int x = Integer.parseInt(size[0]);
			int y = Integer.parseInt(size[1]);
			Coordinate[][] map = new Coordinate[x][y];
			Coordinate current;
			int numPots, numMetal, numCharcoal, i = 0, date;
			while(scan.hasNextLine()){
				line = scan.nextLine();
				array = line.split(",");
				col = Integer.parseInt(array[i++]) - 64;
				row = Integer.parseInt(array[i++]);
				current = map[row][col];
				current.setFeature(getFeatureType(array[i]));
				current.setCurrentViewableSymbol(array[i++].charAt(0));
				current.setExcavated(Boolean.parseBoolean(array[i++]));
				numPots = Integer.parseInt(array[i++]);
				while((date = Integer.parseInt(array[i++])) >= 400){
					current.addPot(new Pot(date));
				}
				numMetal = Integer.parseInt(array[i])
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	private Feature getFeatureType(String featureType) {
		switch(featureType){
			case "Y":
				return Feature.parchedGrass;
			case "G":
				return Feature.wetGrass;
			case "N":
				return Feature.naturalGrass;
			case "S":
				return Feature.stone;
			case "P":
				return Feature.postHole;
			case "D":
				return Feature.exposedDirt;
			
				
		}
		return null;
	}

	public void save(File fileName, Coordinate map[][]){
		
	}
}
